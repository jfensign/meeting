// Generated by CoffeeScript 1.10.0
(function() {
  var Login, _, models, validation;

  models = require('../models');

  validation = require('express-validator');

  _ = require('underscore');

  Login = (function() {
    var post;

    function Login(router, resource) {
      this.router = router;
      this.resource = resource;
      this.router.post("/", post);
      this.router.get("/", post);
      this.router.all("*", function(req, res) {
        return res.status(405).json({
          status: 405,
          error: "Method Not Allowed"
        });
      });
    }

    post = function(req, res) {
      token_promise;
      errors;
      var errors, token_promise;
      req.checkQuery('username', 'Required Query Parameter').notEmpty();
      req.checkQuery('deviceId', 'Required Query Parameter').notEmpty();
      req.checkQuery('password', 'Required Query Parameter').notEmpty();
      errors = req.validationErrors();
      if (errors) {
        res.status(400).json({
          status: 400,
          message: errors
        });
        return;
      }
      token_promise = models.login.perform(_.pick(req.query, 'username', 'deviceId', 'password'));
      return token_promise.then(function(doc) {
        var response;
        response = {
          userId: doc._id.toString(),
          username: req.query.username,
          token: doc.token
        };
        return req.login(response, function() {
          return res.json(response);
        });
      }, function(error) {
        return res.status(401).json(error);
      });
    };

    Login.prototype.get_routes = function() {
      return this.router;
    };

    return Login;

  })();

  module.exports = Login;

}).call(this);
